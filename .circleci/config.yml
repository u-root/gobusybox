version: 2

templates:
  gopath-template: &gopath-template
    working_directory: /home/circleci/go/src/github.com/u-root/gobusybox
    environment:
      - GOPATH: "/home/circleci/go"
      - CGO_ENABLED: 0
      - GO111MODULE: "off"

  gomod-template: &gomod-template
    working_directory: /home/circleci/gobusybox
    environment:
      - CGO_ENABLED: 0
      - GO111MODULE: "auto"

  go122-template: &go122-template
    docker:
      - image: cimg/go:1.22

workflows:
  version: 2
  build:
    jobs:
      - clean-gopath
      - clean-gomod

jobs:
  clean-gopath:
    <<: [*go122-template, *gopath-template]
    steps:
      - checkout
      - run:
          name: gofmt
          command: |
            cd vendortest
            test -z "$(gofmt -s -l $(find -name '*.go' | grep -v /vendor/))"

  clean-gomod:
    <<: [*go122-template, *gomod-template]
    steps:
      - checkout
      - run:
          name: go mod tidy
          command: |
            (cd src && go mod tidy && go mod verify)
            (cd test && go mod tidy && go mod verify)
            (cd vendortest && go mod tidy && go mod verify)
            (cd test/diamonddep/mod1 && go mod tidy && go mod verify)
            # NOTE: Specifically do NOT tidy test/diamondeps/mod2. It doesn't
            # build on its own locally due to the mutual dependency; and we do
            # not want hashes of our own repository in here -- they'll always be
            # out of date.
            (cd test/diamonddep/mod3 && go mod tidy && go mod verify)
            (cd test/goembed && go mod tidy && go mod verify)
            (cd test/normaldeps/mod1 && go mod tidy && go mod verify)
            (cd test/normaldeps/mod2 && go mod tidy && go mod verify)
            (cd test/nested && go mod tidy && go mod verify)
            (cd test/nested/nestedmod && go mod tidy && go mod verify)
            git status
            if [[ -n "$(git status --porcelain .)" ]]; then
              echo 'go.mod/go.sum is out-of-date: run `go mod tidy` in the right module directories (see git status) and then check in the changes'
              echo 'If `go mod tidy` results in no changes, make sure you are using the latest relase of Go'
              git status --porcelain .
              exit 1
            fi
      - run:
          name: vet
          command: |
            (cd src && go vet ./...)
            (cd test && go vet ./...)
            (cd test/diamonddep/mod1 && go vet ./...)
            # test/diamonddep/mod2 doesn't build locally on its own due to
            # mutual dependency.
            (cd test/diamonddep/mod3 && go vet ./...)
            (cd test/goembed && go vet ./...)
            (cd test/normaldeps/mod1 && go vet ./...)
            (cd test/normaldeps/mod2 && go vet ./...)
            (cd test/nested && go vet ./...)
            (cd test/nested/nestedmod && go vet ./...)
      - run:
          name: gofmt
          command: |
            (cd src && test -z "$(gofmt -s -l $(find -name '*.go'))")
            (cd test && test -z "$(gofmt -s -l $(find -name '*.go'))")

